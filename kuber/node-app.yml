# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app
  labels:
    app: node-app
spec:
  replicas: 1
  template:
    metadata:
      name: node-app
      labels:
        app: node-app
    spec:
      containers:
        - name: node-app
          image: vissper/node-app:1.0
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGODB_USER
              value: 'admin'
            - name: MONGODB_PASSWORD
              value: 'password'
            - name: MONGODB_SERVER
              value: 'mongo-service'
            - name: MONGODB_PORT
              value: '27017'
          ports:
            - containerPort: 3000
      restartPolicy: Always
  selector:
    matchLabels:
      app: node-app
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: node-app-service
spec:
  selector:
    app: node-app
#  type: LoadBalancer
  # using cluster ip to hide service and get access only through ingress
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
#      nodePort: 30500
---
# https://kubernetes.io/docs/concepts/services-networking/ingress/
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: node-app-ingress
spec:
  rules:
    - host: node.test
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: node-app-service
                port:
                  number: 3000
